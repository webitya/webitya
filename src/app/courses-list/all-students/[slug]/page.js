'use client';

import {
  Avatar,
  Chip,
  Link as MuiLink,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Tooltip,
  Typography,
  Paper,
  Button,
  Box,
  Divider,
  Card,
  CardContent
} from '@mui/material';
import { FileDownload, ArrowBack } from '@mui/icons-material';
import studentViewAllData from '../../../../components/CoursesPage/CourseEnrollStudents/CourseStudentViewAllData/coursestudentviewalldata';
import Link from 'next/link';
import jsPDF from 'jspdf';
import autoTable from 'jspdf-autotable';
import Image from 'next/image';
import Footer from '@/components/FooterEl';

export default function StudentDetailPage({ params }) {
  const { slug } = params;
  const student = studentViewAllData[slug];

  if (!student) {
    return <p className="p-6 text-red-500">Student not found.</p>;
  }

  const handleDownloadPDF = () => {
    const doc = new jsPDF();
    doc.setFontSize(20);
    doc.setFont('helvetica', 'bold');
    doc.text(student.name, 14, 25);
    doc.setDrawColor(200);
    doc.line(14, 28, 195, 28);

    doc.setFontSize(12);
    doc.setFont('helvetica', 'normal');
    let y = 35;
    const infoLines = [
      `Qualification: ${student.qualification}`,
      `Course: ${student.course}`,
      `Address: ${student.address}`,
      `Email: ${student.email}`,
      `LinkedIn: ${student.linkedin}`,
    ];
    infoLines.forEach((line) => {
      doc.text(line, 14, y);
      y += 7;
    });

    doc.line(14, y + 3, 195, y + 3);

    autoTable(doc, {
      startY: y + 10,
      head: [['Day', 'Date', 'Topic', 'Homework', 'Status', 'Lecture Link', 'Resource Link']],
      body: student.journey.map(entry => [
        entry.day,
        entry.date,
        entry.topic,
        entry.homeworkSubmitted ? '-' : (entry.homeworkFile ? 'Available' : '-'),
        entry.homeworkSubmitted ? 'Completed' : 'Pending',
        entry.lectureLink,
        entry.resourceLink,
      ]),
      styles: {
        fontSize: 9,
        cellPadding: 3,
      },
      columnStyles: {
        5: { cellWidth: 50 },
        6: { cellWidth: 50 },
      },
      headStyles: {
        fillColor: [0, 150, 136],
        textColor: 255,
        fontStyle: 'bold',
      },
      alternateRowStyles: {
        fillColor: [240, 240, 240],
      },
      theme: 'striped',
    });

    const pageHeight = doc.internal.pageSize.height;
    doc.setFontSize(10);
    doc.setTextColor(150);
    doc.text('Generated by Webitya | www.webitya.com', 14, pageHeight - 10);

    const totalPages = doc.internal.getNumberOfPages();
    for (let i = 1; i <= totalPages; i++) {
      doc.setPage(i);
      doc.text(`Page ${i} of ${totalPages}`, 200, pageHeight - 10, { align: 'right' });
    }

    doc.save(`${student.name.replace(/\s+/g, '_')}_Course_Report.pdf`);
  };

  const handleDownloadCSV = () => {
    const headers = ['Day', 'Date', 'Topic', 'Homework', 'Status', 'Lecture Link', 'Resource Link'];

    const rows = student.journey.map(entry => [
      entry.day,
      entry.date,
      entry.topic,
      entry.homeworkFile ? 'Available' : '-',
      entry.homeworkSubmitted ? 'Completed' : 'Pending',
      entry.lectureLink,
      entry.resourceLink,
    ]);

    let csvContent = '';
    csvContent += headers.join(',') + '\n';
    rows.forEach(row => {
      csvContent += row.map(field => `"${String(field).replace(/"/g, '""')}"`).join(',') + '\n';
    });

    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.setAttribute('download', `${student.name.replace(/\s+/g, '_')}_Progress.csv`);
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  return (
    <>
      <div className="p-2 md:p-4  mx-auto">
        
        {/* Back Button */}
        <Box className="flex justify-end items-center mb-3">
          <Link href="/courses/all-students" passHref>
            <Button variant="outlined" startIcon={<ArrowBack />} color="primary">
              Back
            </Button>
          </Link>
        </Box>

        {/* Profile Header */}
        <Card className="mb-2 shadow-lg rounded-2xl">
          <CardContent className="flex flex-col md:flex-row items-center gap-6">
          <Avatar
  src={student.image}
  alt={student.name}
  sx={{
    width: 100,
    height: 100,
    border: '3px solid #D1D5DB',       // Light gray border
    borderRadius: '50%',
    objectFit: 'contain',
    boxShadow: '0 4px 10px rgba(0, 0, 0, 0.05)', // Optional soft shadow
  }}
/>

            <div className="space-y-1">
              <Typography variant="h4" fontWeight="bold">{student.name}</Typography>
              <Chip
                label={student.qualification}
                sx={{
                  background: 'linear-gradient(to right, #00bcd4, #009688)',
                  color: '#fff',
                  fontWeight: 500,
                }}
              />
              <Typography>{student.course}</Typography>
              <Typography>{student.address}</Typography>
              <MuiLink
                href={student.linkedin}
                target="_blank"
                rel="noopener noreferrer"
                color="primary"
                underline="hover"
              >
                LinkedIn Profile
              </MuiLink>
              <Typography variant="body2" color="text.secondary">{student.email}</Typography>
            </div>
          </CardContent>
        </Card>

        {/* Course Journey Table */}
        <Card className="shadow-md rounded-2xl">
          <CardContent>
              {/* Powerd By Section */}
              <div className="flex items-center justify-end gap-2 mb-2 text-xs text-slate-500">
                <span>Powered by</span>
                <MuiLink href="/">
                  <Image
                    src="/brand/logo1.png"
                    alt="Webitya Logo"
                    width={70}
                    height={20}
                    className="object-contain cursor-pointer"
                  />
                </MuiLink>
              </div>
            <Box className="flex justify-between items-center mb-4">
              <div className='flex gap-2 items-center'>
                <Typography variant="h6" fontWeight="bold">60-Day Course Journey</Typography>
                
              </div>
              <Chip
                  label="Track Progress"
                  color="info"
                  variant="outlined"
                  onClick={handleDownloadCSV}
                  sx={{ cursor: 'pointer' }}
                  icon={<FileDownload fontSize="small" />}
                />
              
            </Box>
            <Divider className="mb-3" />
            <TableContainer component={Paper} sx={{ maxHeight: 500, borderRadius: 2 }}>
              <Table stickyHeader size="small">
                <TableHead>
                  <TableRow>
                    <TableCell sx={{ fontWeight: 600 }}>Day</TableCell>
                    <TableCell sx={{ fontWeight: 600 }}>Date</TableCell>
                    <TableCell sx={{ fontWeight: 600 }}>Topic</TableCell>
                    <TableCell sx={{ fontWeight: 600 }}>Homework</TableCell>
                    <TableCell sx={{ fontWeight: 600 }}>Status</TableCell>
                    <TableCell sx={{ fontWeight: 600 }}>Lecture</TableCell>
                    <TableCell sx={{ fontWeight: 600 }}>Resource</TableCell>
                  </TableRow>
                </TableHead>
                <TableBody>
                  {student.journey.map((entry, index) => (
                    <TableRow key={index} hover>
                      <TableCell>{entry.day}</TableCell>
                      <TableCell>{entry.date}</TableCell>
                      <TableCell>{entry.topic}</TableCell>
                      <TableCell>
                        {entry.homeworkFile ? (
                          <Tooltip title="Download Homework">
                            <Button
                              href={entry.homeworkFile}
                              download
                              variant="outlined"
                              size="small"
                              sx={{
                                minWidth: 0,
                                padding: 1,
                                borderRadius: '50%',
                                color: 'primary.main',
                                borderColor: 'primary.main',
                              }}
                            >
                              <FileDownload fontSize="small" />
                            </Button>
                          </Tooltip>
                        ) : (
                          <Typography variant="body2" color="text.disabled">â€”</Typography>
                        )}
                      </TableCell>
                      <TableCell>
                        <Chip
                          label={entry.homeworkSubmitted ? 'Completed' : 'Pending'}
                          color={entry.homeworkSubmitted ? 'success' : 'warning'}
                          size="small"
                          variant="outlined"
                        />
                      </TableCell>
                      <TableCell>
                        <MuiLink
                          href={entry.lectureLink}
                          target="_blank"
                          rel="noopener noreferrer"
                          underline="hover"
                          color="primary"
                        >
                          Watch
                        </MuiLink>
                      </TableCell>
                      <TableCell>
                        <MuiLink
                          href={entry.resourceLink}
                          download
                          underline="hover"
                          color="secondary"
                        >
                          Download
                        </MuiLink>
                      </TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </TableContainer>
          </CardContent>
        </Card>

        {/* PDF Download Button */}
        <div className="mt-6 flex gap-2 justify-end">
        <Link href="/courses/all-students" passHref>
            <Button variant="outlined" startIcon={<ArrowBack />} color="primary">
              Back
            </Button>
          </Link>
          <Button
            onClick={handleDownloadPDF}
            variant="contained"
            color="primary"
          >
            Download PDF
          </Button>

        </div>
      </div>
      <Footer />
    </>
  );
}
